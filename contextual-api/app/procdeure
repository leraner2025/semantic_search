Click the Cloud Shell icon in the top-right corner (terminal icon)

In the shell terminal, navigate to your project folder:

bash
cd ~/docai-api  # or clone your repo here
Run your Docker commands:

bash
docker build -t docai-api .
docker run -p 8080:8080 docai-api


bash
gcloud iam service-accounts create contextual-client \
  --description="Invoker for Contextual API" \
  --display-name="Contextual Client"
This will create a service account named:

Code
contextual-client@YOUR_PROJECT_ID.iam.gserviceaccount.com
You can then assign roles, deploy Cloud Run, and configure access â€” all from the same shell.

2. Build and Push Your Container
gcloud builds submit --tag us-central1-docker.pkg.dev/YOUR_PROJECT_ID/contextual-repo/contextual-api
3. Deploy to Cloud Run (Private)
Use the service account you created (contextual-client@...):
gcloud run deploy contextual-api \
  --image=us-central1-docker.pkg.dev/YOUR_PROJECT_ID/contextual-repo/contextual-api \
  --platform=managed \
  --region=us-central1 \
  --no-allow-unauthenticated \
  --service-account=contextual-client@YOUR_PROJECT_ID.iam.gserviceaccount.com
4. Grant Cloud Run Invoker Role
gcloud run services add-iam-policy-binding contextual-api \
  --member="serviceAccount:contextual-client@YOUR_PROJECT_ID.iam.gserviceaccount.com" \
  --role="roles/run.invoker" \
  --region=us-central1
TOKEN=$(gcloud auth print-identity-token \
  --audiences=https://contextual-api-abc123-uc.a.run.app \
  --impersonate-service-account=contextual-client@YOUR_PROJECT_ID.iam.gserviceaccount.com)
5. Test the API Securely
Generate an identity token and invoke:
curl -X POST https://contextual-api-abc123-uc.a.run.app/analyze \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"response_content": "...", "query_text": "diabetes"}'
