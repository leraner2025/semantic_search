Hybrid Strategy — “Semantic Rollup”
A very effective method is to dynamically roll up CUIs to their lowest informative ancestor — not necessarily all the way to the top.
Algorithmically:
For each CUI, find its ancestor chain (via UMLS MRREL.RRF, relation PAR/CHD).
Compute the information content (IC) or depth of each node.
Select the ancestor with IC > threshold (not too broad, not too narrow).
Replace all child CUIs by that ancestor.
 Preserves semantic context (not just structure).
 Reduces redundancy by merging semantically close concepts.
Works very well with embeddings or graph-based models.

Overall Pipeline (No Corpus Needed)
Step 1. Extract the UMLS hierarchy

Use the UMLS MRREL.RRF file.

Keep only relations where REL = 'PAR' (“parent-of”).

Build two mappings:

child → parents

parent → children

- Gives you the taxonomy graph of CUIs.

Step 2. Estimate each concept’s specificity

Because you don’t have a corpus, compute structural information content (IC):

IC(cui) = -\log\!\left(\frac{\text{# descendants}(cui)+1}{\text{# all CUIs}}\right)

Concepts with many descendants → general → low IC

Concepts with few or no descendants → specific → high IC

- Produces a numeric “informativeness” for every CUI.

Step 3. Choose an informativeness threshold

Compute the median (or mean) of all IC values.

Use that as the cut-off for “informative enough”.

Above threshold → sufficiently specific

Below threshold → too general

- Controls how much you compress the hierarchy.

Step 4. Find ancestors for each CUI

Traverse upward in the hierarchy (child → parent → grandparent …).

Collect all ancestors for each concept.

- Gives the candidate roll-up targets for every leaf CUI.

Step 5. Select the Lowest Informative Ancestor (LIA)

For each CUI:

Evaluate IC for all ancestors + itself.

Keep ancestors whose IC ≥ threshold.

Pick the one with smallest IC above the threshold → broadest concept that’s still informative.

If none qualify, keep the original CUI.

- This merges overly specific CUIs while keeping semantic meaning.

Step 6. Create the roll-up mapping

Store results as:

child_cui	rolled_up_cui	child_IC	rolled_up_IC

- A compact lookup table showing which fine-grained CUIs map to which generalized concepts.

Step 7. Use the rolled-up CUIs

Clinical summarization: use the rolled-up CUIs (fewer, more general concepts).

Semantic search / retrieval: index both leaf CUIs and rolled-up CUIs for multi-level matching.

Clustering / topic modeling: use the rolled-up CUIs as features.
